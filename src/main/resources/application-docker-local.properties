# Server Port
server.port = 8081

# Microservice Name
spring.application.name=product-service

# Liquibase config
spring.liquibase.enabled=true
spring.liquibase.drop-first=true
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml
spring.liquibase.default-schema=product

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.enabled= true
spring.cloud.client.hostname=localhost
error.whitelabel.enabled= false

# Connection url for the database
spring.datasource.url =jdbc:mysql://localhost:3306/product?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

user.service.url = http://localhost:8080

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.use-new-id-generator-mappings= false

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Allows Conditional Scheduling
spring.enable.scheduling = true

#Chron Expression for Emptying the Cart every Monday
cron.expression= 0 15 10 ? * *

# ===============================
# = Eclipse plugin - ANSI Escape in Console
# ===============================
# To install the plugin in Eclipse select Help -> Install New Software... and click "Add.." to add the following URL:
# http://www.mihai-nita.net/eclipse
spring.main.banner-mode=off 
spring.output.ansi.enabled=ALWAYS

logging.level.root=INFO

# Required to enabled the DistributedCommandBus
axon.distributed.enabled=true
# Defines the load factor used for this segment. Defaults to 100
axon.distributed.load-factor=100
# Defines the CapabilityDiscoveryMode used. Defaults to REST
axon.distributed.spring-cloud.mode=rest
# Defines the endpoint used to retrieve member capabilities from. Defaults to "/member-capabilities"
axon.distributed.spring-cloud.rest-mode-url=/saga/commands
# Defines whether the CapabilityDiscoRestCapabilityDiscoveryModeveryMode should be decorated to ignore faulty ServiceInstances
axon.distributed.spring-cloud.enable-ignore-listing=true
# Defines whether the CapabilityDiscoveryMode should be decorated to accept all types of commands
axon.distributed.spring-cloud.enable-accept-all-commands=false

management.endpoints.web.exposure.include=mappings
#logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.axonframework=DEBUG